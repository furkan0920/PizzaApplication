# -*- coding: utf-8 -*-
"""Pizza.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CKKqOc4qm5IK-neUdqh-kcdFXiWXf3pY

# Kütühaneler Tanimlandi
"""

import csv
import datetime

"""# 'Menu.txt' dosyası olusturuldu"""

with open("Menu.txt", "w") as menu:
    menu.write("""* Lütfen Bir Pizza Tabanı Seçiniz:
1: Klasik
2: Margarita
3: TürkPizza
4: Sade Pizza
* ve seçeceginiz sos:
11: Zeytin
12: Mantarlar
13: KasarPeyniri
14: Et
15: Sogan
16: Misir
* Tesekkür ederiz!\n""")

"""'Menu.txt' dosyasındaki satırlar key value degerlerine ayrılarak dictinonary formatına getirlidi"""

with open("Menu.txt") as menu:
    menudekiler = {}
    for line in menu:
        if "*" in line:
            continue
        (key, val) = line.split(": ")
        val = val[:-1]
        menudekiler[int(key)] = val

"""# Pizza Üst Sinifi"""

class Pizza:
    def get_description(self):
        return self.__class__.__name__

    def get_cost(self):
        return self.__class__.ucret

"""## Pizza Tabanlari"""

class Klasik(Pizza):
    ucret = 60.0

    def __init__(self):
        self.description = "domates sosu, kaşar peyniri, sucuk"


class Margarita(Pizza):
    ucret = 70.0

    def __init__(self):
        self.description = "domates sosu, et,  kaşar peyniri ve zeytin ve mantar"


class TurkPizza(Pizza):
    ucret = 60.0

    def __init__(self):
        self.description = "domates sosu, kaşar peyniri, mantar ve biber "


class SadePizza(Pizza):
    ucret = 55

    def __init__(self):
        self.description = "domates sosu, kaşar peyniri"

"""## Pizza Soslari"""

class Decorator(Pizza):
    def __init__(self, topping):
        self.component = topping

    def get_cost(self):
        return self.component.get_cost() + \
          Pizza.get_cost(self)

    def get_description(self):
        return self.component.get_description() + \
          ' ' + Pizza.get_description(self)


class Zeytin(Decorator):
    ucret = 4

    def __init__(self, topping):
        Decorator.__init__(self, topping)


class Mantarlar(Decorator):
    ucret = 8

    def __init__(self, topping):
        Decorator.__init__(self, topping)


class KasarPeyniri(Decorator):
    ucret = 15

    def __init__(self, topping):
        Decorator.__init__(self, topping)


class Et(Decorator):
    ucret = 20

    def __init__(self, topping):
        Decorator.__init__(self, topping)


class Sogan(Decorator):
    ucret = 5

    def __init__(self, topping):
        Decorator.__init__(self, topping)


class Misir(Decorator):
    ucret = 5

    def __init__(self, topping):
        Decorator.__init__(self, topping)

def main():
    with open("Menu.txt") as pizza_menu:
        for l in pizza_menu:
            print(l, end="")

    pizza_secenek = {1:  Klasik, 2: Margarita, 3: TurkPizza, 4: SadePizza, 11: Zeytin, 12: Mantarlar, 13: KasarPeyniri, 14: Et, 15: Sogan, 16: Misir}

    kullanici = input("Lütfen pizza tabanini seciniz: ")
    while  kullanici not in ["1", "2", "3", "4"]:
         kullanici = input("pizza tabanı için 1-4 arasında geçerli bir numara girin: ")

    order = pizza_secenek[int( kullanici)]()

    while  kullanici != "0":
         kullanici = input("Lütfen pizzanin icerigini seciniz \t\t seciminiz bittiğinde çıkmak için '0' a basınız ")
         if  kullanici in ["11", "12", "13", "14", "15", "16"]:
            order = pizza_secenek[int( kullanici)](order)

    print("\n"+order.get_description().strip() +
          ": ₺" + str(order.get_cost()))

    ad = input("Adınızı girin: ")

    ID = input("TC Kimlik numaranızı girin: ")
    IDKonrtol=len(ID.strip())
    while IDKonrtol!=11:
      print("Lutfen 11 haneli TC numarasini giriniz.:") 
      ID = input("TC Kimlik numaranızı girin: ")
      IDKonrtol=len(ID.strip())
      if IDKonrtol==11:
        break



    kredi_karti = input("Kredi numaranızı girin: ")
    krediKartKontrol=len(kredi_karti.strip())
    while krediKartKontrol!=16:
      print("Eksik ve Hatali Giris")      
      kredi_karti = input("16 haneli kredi karti numarasi giriniz: ")
      krediKartKontrol=len(kredi_karti.strip())
      if krediKartKontrol==16:
        break


    kredi_cvc = input("Kredi kartınızın arkasına 3 rakam girin: ")
    cvcKontrol=len(kredi_cvc.strip())
    while cvcKontrol!=3:
      print("3 Haneli numarayi giriniz")
      kredi_cvc = input("Kredi kartınızın arkasına 3 rakam girin: ")
      cvcKontrol=len(kredi_cvc.strip())
      if krediKartKontrol==3:
        break

    siparis_zamani = datetime.datetime.now()

    with open('Orders_File.csv', 'a') as orders:
        orders = csv.writer(orders, delimiter=',')

        orders.writerow([ad, ID, kredi_karti, kredi_cvc, order.get_description(), siparis_zamani])


if __name__ == '__main__':
    main()

